#!/usr/bin/env bash

# default options
include=''
exclude=''
quiet=false
dry_run=false
cmd=''

while [ "$#" -gt 0 ]; do
  case "$1" in
    -i) include="$2"; shift 2;;
    -e) exclude="$2"; shift 2;;
    -q) quiet=true; shift 1;;
    -d) dry_run=true; shift 1;;

    --include=*) include="${1#*=}"; shift 1;;
    --exclude=*) exclude="${1#*=}"; shift 1;;
    --quiet) quiet=true; shift 1;;
    --dry-run) dry_run=true; shift 1;;
    --include|--exclude) echo "$1 requires an argument" >&2; exit 1;;

    -*) echo "unknown option: $1" >&2; exit 1;;
    *) cmd="$cmd $1"; shift 1;;
  esac
done

if [ "$cmd" == '' ]; then
  echo "No command provided."
  exit 1
fi

function filter_versions
{
  versions=$1
  filter=$2

  if [ "$filter" == "" ]; then
    echo $versions
    exit 0
  fi

  local regex_regex='^/.*/$'
  local filtered_versions=''

  if [[ $filter =~ $regex_regex ]]; then
    # remove leading and trailing /
    filter=`echo $filter | sed 's/^\/\(.*\)\/$/\1/'`
  else
    # replace commas with pipes so it can be used as a regex
    filter=`echo $filter | sed 's/\,/\|/g'`
  fi

  for version in $versions; do
    if [[ $version =~ $filter ]]; then
      filtered_versions="$filtered_versions $version"
    fi
  done

  echo $filtered_versions
}

all_versions=`rbenv versions --bare`

include_versions=$(filter_versions "$all_versions" $include)

exclude_versions=''
if [ "$exclude" != "" ]; then
  exclude_versions=$(filter_versions "$all_versions" $exclude)
fi

for version in $include_versions; do
  if [[ ! $exclude_versions =~ $version ]]; then
    if [ $quiet == false ]; then
      echo "Executing in $version..."
    fi

    if [ $dry_run == true ]; then
      echo $cmd
    else
      RBENV_VERSION=$version $cmd
    fi

    echo ""
  fi
done

exit 0
